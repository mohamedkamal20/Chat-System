version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - cassandra
      - cassandra2
      - redis
    environment:
      - CASSANDRA_HOST=cassandra
      - REDIS_HOST=redis
    restart: always
    networks:
      - cassandra-net

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=ChatCluster
      - CASSANDRA_SEEDS=cassandra,cassandra2
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
    volumes:
      - ./data:/var/lib/cassandra
    networks:
      - cassandra-net

  cassandra2:
    image: cassandra:latest
    container_name: cassandra2
    environment:
      - CASSANDRA_CLUSTER_NAME=ChatCluster
      - CASSANDRA_SEEDS=cassandra,cassandra2
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
    networks:
      - cassandra-net
    volumes:
      - ./data2:/var/lib/cassandra

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    restart: always

  cassandra-init:
    build:
      context: .
      dockerfile: Dockerfile.init
    depends_on:
      - cassandra
      - cassandra2
    networks:
      - cassandra-net
    entrypoint: [ "sh", "-c", "until cqlsh cassandra -e 'describe keyspaces'; do echo 'Waiting for Cassandra to be up...'; sleep 5; done; cqlsh cassandra -f /docker-entrypoint-initdb.d/init.cql" ]
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - cassandra-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - cassandra-net

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8085:8085"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    networks:
      - cassandra-net

networks:
  cassandra-net:
    driver: bridge
